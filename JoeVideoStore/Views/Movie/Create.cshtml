@model JoeVideoStore.Models.MovieModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MovieModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                @Html.DropDownList("Rating", new List<SelectListItem>
                {
                    new SelectListItem {Text = "1", Value = "1" },
                    new SelectListItem {Text = "2", Value = "2" },
                    new SelectListItem {Text = "3", Value = "3" },
                    new SelectListItem {Text = "4", Value = "4" },
                    new SelectListItem {Text = "5", Value = "5" }
                }, "Select Rating")
       

                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Genre", new List<SelectListItem>
                {
                    new SelectListItem {Text = "Action", Value = "Action" },
                    new SelectListItem {Text = "Adventure", Value = "Adventure" },
                    new SelectListItem {Text = "Carton", Value = "Carton" },
                    new SelectListItem {Text = "Comedy", Value = "Comedy" },
                    new SelectListItem {Text = "Documentary", Value = "Documentary" },
                    new SelectListItem {Text = "Drama", Value = "Drama" },
                    new SelectListItem {Text = "Horror", Value = "Horror" },
                    new SelectListItem {Text = "Musical", Value = "Musical" },
                    new SelectListItem {Text = "Romantic", Value = "Romantic" },
                    new SelectListItem {Text = "Sci-Fi", Value = "Sci-Fi" },
                    new SelectListItem {Text = "Thriller", Value = "Thriller" },
                    new SelectListItem {Text = "Western", Value = "Western" },
                    new SelectListItem {Text = "Other", Value = "Other" }
                }, "Select Genre")
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
